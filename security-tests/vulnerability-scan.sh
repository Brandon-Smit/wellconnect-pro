#!/bin/bash

# Security Vulnerability Scanning Script

set -e

# Color codes
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}ðŸ”’ WellConnect Pro Security Vulnerability Scan${NC}"

# Check for known vulnerabilities in dependencies
echo -e "\n${GREEN}[1/5] Checking NPM Vulnerabilities${NC}"
npm audit --audit-level=high

# Static Code Analysis
echo -e "\n${GREEN}[2/5] Static Code Analysis with SonarQube${NC}"
sonar-scanner \
  -Dsonar.projectKey=wellconnect-pro \
  -Dsonar.sources=./src \
  -Dsonar.host.url=$SONAR_HOST_URL \
  -Dsonar.login=$SONAR_TOKEN

# OWASP ZAP Security Scan
echo -e "\n${GREEN}[3/5] Web Application Security Scan${NC}"
docker run -t owasp/zap2docker-stable \
  zap-baseline.py \
  -t http://localhost:3000 \
  -r zap-report.html

# Check for exposed secrets
echo -e "\n${GREEN}[4/5] Scanning for Exposed Secrets${NC}"
detect-secrets scan > secret-scan-results.json

# Check SSL/TLS Configuration
echo -e "\n${GREEN}[5/5] SSL/TLS Configuration Check${NC}"
testssl.sh https://localhost:3000 > ssl-test-results.txt

# Summarize Results
echo -e "\n${GREEN}Security Scan Complete!${NC}"
echo "Review detailed reports in the following files:"
echo "- NPM Audit: npm-audit-report.json"
echo "- SonarQube: .scannerwork/report-task.txt"
echo "- OWASP ZAP: zap-report.html"
echo "- Secret Scan: secret-scan-results.json"
echo "- SSL Test: ssl-test-results.txt"

exit 0
